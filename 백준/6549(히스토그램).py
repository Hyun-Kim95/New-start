while True:                                 # 6549(히스토그램에서 가장 큰 직사각형)
    n, *h=list(map(int, input().split()))   # n:직사각형의 수, h:각 직사각형의 높이들
    h.append(0)                             # 마지막 체크용(현재 높이가 이전 높이보다 낮아야 반복문이 돌아가서 마지막 높이를 가장 낮게)
    if n == 0:                              # 종료신호
        break
    s=[]                                    # 이전 직사각형의 높이 인덱스 보관
    ans=0                                   # 가장 큰직사각형의 넓이 보관
    for i,j in enumerate(h):                # i가 늘어가면서 그 이전까지 중 최대 넓이 찾기
        while s and h[s[-1]]>j:             # s가 비어있지 않고, 현재 높이보다 이전 높이가 높은 경우(높이가 낮아진 순간)
            ij=h[s.pop()]                   # 이전 사각형의 인덱스 값 전달 및 삭제
            if s:                           # s가 비어있지 않다면
                w=i-s[-1]-1                 # 사각형의 가로 길이: 현재 인덱스(i)는 높이가 줄어든 상태여서 이전 것까지 비교해야 함으로 1을 빼줌
            else:                           # s가 비었다면 현재 인덱스의 넓이를 구함
                w = i
            if ans<w*ij:                    # 새로 구한 넓이가 이전 넓이보다 크면 바꿔줌
                ans=w*ij
        s.append(i)                         # s가 비었거나(비교완료), 현재 사각형의 높이가 더 크면 현재 인덱스값 추가(작아질때 한번에 비교)
    print(ans)
